# Generated by Django 5.2.6 on 2025-10-21 19:47

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0002_userprofile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('customer_name', models.CharField(max_length=255)),
                ('customer_email', models.EmailField(blank=True, max_length=254)),
                ('customer_phone', models.CharField(blank=True, max_length=20)),
                ('customer_address', models.TextField(blank=True)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=15)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('issue_date', models.DateField()),
                ('due_date', models.DateField()),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('etims_invoice_number', models.CharField(blank=True, max_length=100)),
                ('etims_status', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('terms_conditions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='users.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='finance.invoice')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('transaction_type', models.CharField(choices=[('income', 'Income'), ('expense', 'Expense'), ('transfer', 'Transfer'), ('investment', 'Investment'), ('loan', 'Loan'), ('refund', 'Refund')], max_length=20)),
                ('payment_method', models.CharField(choices=[('mpesa', 'M-Pesa'), ('bank_transfer', 'Bank Transfer'), ('cash', 'Cash'), ('card', 'Card'), ('cheque', 'Cheque'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='completed', max_length=20)),
                ('description', models.TextField()),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('external_id', models.CharField(blank=True, max_length=100)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('subcategory', models.CharField(blank=True, max_length=100)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('supplier', models.CharField(blank=True, max_length=255)),
                ('customer', models.CharField(blank=True, max_length=255)),
                ('transaction_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='users.business')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='finance.invoice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('budget_type', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('project', 'Project'), ('department', 'Department')], max_length=20)),
                ('category', models.CharField(max_length=100)),
                ('budgeted_amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('spent_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('remaining_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('alert_threshold', models.DecimalField(decimal_places=2, default=80.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to='users.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
                'indexes': [models.Index(fields=['business', 'is_active'], name='finance_bud_busines_4a1134_idx'), models.Index(fields=['category', 'budget_type'], name='finance_bud_categor_daa7d5_idx')],
            },
        ),
        migrations.CreateModel(
            name='CashFlow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('flow_type', models.CharField(choices=[('inflow', 'Cash Inflow'), ('outflow', 'Cash Outflow'), ('net', 'Net Cash Flow')], max_length=20)),
                ('category', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('is_forecast', models.BooleanField(default=False)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('source', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_flows', to='users.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_flows', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-period_start'],
                'indexes': [models.Index(fields=['business', 'period_start'], name='finance_cas_busines_45c809_idx'), models.Index(fields=['flow_type', 'is_forecast'], name='finance_cas_flow_ty_cf2bb5_idx')],
            },
        ),
        migrations.CreateModel(
            name='CreditScore',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(300), django.core.validators.MaxValueValidator(850)])),
                ('score_category', models.CharField(choices=[('poor', 'Poor (300-579)'), ('fair', 'Fair (580-669)'), ('good', 'Good (670-739)'), ('very_good', 'Very Good (740-799)'), ('excellent', 'Excellent (800-850)')], max_length=20)),
                ('payment_history', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('credit_utilization', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('business_age', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('revenue_stability', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('debt_to_income', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('factors', models.JSONField(blank=True, default=dict)),
                ('recommendations', models.JSONField(blank=True, default=list)),
                ('calculation_method', models.CharField(default='ai_enhanced', max_length=100)),
                ('data_sources', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_scores', to='users.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_scores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['business', 'score'], name='finance_cre_busines_6a6a51_idx'), models.Index(fields=['score_category'], name='finance_cre_score_c_7352e0_idx')],
            },
        ),
        migrations.CreateModel(
            name='FinancialForecast',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('forecast_type', models.CharField(choices=[('revenue', 'Revenue Forecast'), ('expense', 'Expense Forecast'), ('cash_flow', 'Cash Flow Forecast'), ('profit_loss', 'Profit & Loss Forecast')], max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('forecast_data', models.JSONField()),
                ('confidence_score', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('forecast_start', models.DateField()),
                ('forecast_end', models.DateField()),
                ('model_version', models.CharField(blank=True, max_length=50)),
                ('training_data_period', models.CharField(blank=True, max_length=100)),
                ('accuracy_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecasts', to='users.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecasts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['business', 'forecast_type'], name='finance_fin_busines_faf05d_idx'), models.Index(fields=['forecast_start', 'forecast_end'], name='finance_fin_forecas_7f1e1a_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['business', 'status'], name='finance_inv_busines_d4c39a_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['due_date', 'status'], name='finance_inv_due_dat_fb9ca1_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['business', 'transaction_date'], name='finance_tra_busines_d1fb10_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_type', 'status'], name='finance_tra_transac_4d20c4_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['category', 'subcategory'], name='finance_tra_categor_e47efa_idx'),
        ),
    ]
